version: "3.8"

services:
    server:
        build: 
            dockerfile: ./docker/node-dev.dockerfile
            context: .
        container_name: server_authentication
        image: r4deu51/server_authentication
        ports:
            - "3000:3000"
        volumes:
            - ./:/app:rw
            - /app/node_modules
        networks:
            - network
        environment:
            - NODE_ENV=development
            - APP_ENV=development
        env_file:
            - ./.env
        depends_on:
            - redis
            - postgres

    tests-e2e:
        command: yarn test:dev:e2e
        container_name: tests_e2e_authentication
        image: r4deu51/server_authentication
        volumes:
            - ./:/app:rw
            - /app/node_modules
        env_file:
            - ./.env
        environment:
            - NODE_ENV=test
            - APP_ENV=test
        depends_on:
            - redis
            - postgres
        networks:
            - network

    tests-integration:
        command: yarn test:dev:integration
        container_name: tests_integration_authentication
        image: r4deu51/server_authentication
        volumes:
            - ./:/app:rw
            - /app/node_modules
        env_file:
            - ./.env
        environment:
            - NODE_ENV=test
            - APP_ENV=test
        depends_on:
            - redis
            - postgres
        networks:
            - network

    tests-unit:
        command: yarn test:dev:unit
        container_name: tests_unit_authentication
        image: r4deu51/server_authentication
        volumes:
            - ./:/app:rw
            - /app/node_modules
        env_file:
            - ./.env
        environment:
            - NODE_ENV=test
            - APP_ENV=test
        depends_on:
            - redis
            - postgres
        networks:
            - network

    tests:
        command: yarn test:dev
        container_name: tests_authentication
        image: r4deu51/server_authentication
        volumes:
            - ./:/app:rw
            - /app/node_modules
        env_file:
            - ./.env
        environment:
            - NODE_ENV=test
            - APP_ENV=test
        depends_on:
            - redis
            - postgres
        networks:
            - network

    redis:
        image: redis:7.0-alpine
        container_name: redis_authentication
        networks:
            - network
        restart: always

    postgres:
        image: postgres:15.4-alpine
        container_name: postgres_authentication
        environment:
            - POSTGRES_USER=$DATABASE_USERNAME
            - POSTGRES_PASSWORD=$DATABASE_PASSWORD
        networks:
            - network
        ports:
            - "5432:5432"
        restart: always

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.9.1
        container_name: elasticsearch_authentication
        environment:
            - discovery.type=single-node
            - ELASTIC_USERNAME=$ELASTIC_USERNAME
            - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
            - "xpack.security.enabled=false"
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - network

    grafana:
        image: grafana/grafana:10.2.0
        container_name: grafana_authentication
        ports:
            - "3001:3000"
        environment:
            - GF_SECURITY_ADMIN_USER=$GRAFANA_USERNAME
            - GF_SECURITY_ADMIN_PASSWORD=$GRAFANA_PASSWORD

networks:
    network:
        driver: bridge
